{"mappings":"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","sources":["src/scripts/search-catalog.js"],"sourcesContent":["import {\n  searchMovies,\n  getGenres,\n  getTrendingMovies,\n} from '../scripts/movie-api';\n\nconst gallery = document.querySelector('.gallery');\nconst searchForm = document.querySelector('form');\nconst pagination = document.querySelector('#pagination');\nconst message = document.querySelector('#message');\nconst yearFilterContainer = document.querySelector('#year-filter-container');\nconst genreFilterContainer = document.querySelector('#genre-filter-container');\nconst currentDate = new Date().toISOString().split('T')[0];\n\nconst getMoviesForToday = async () => {\n  const movies = await getTrendingMovies();\n  const todayMovies = movies.filter(movie => movie.release_date <= currentDate);\n  return todayMovies;\n};\n\nlet currentPage = 1;\nlet currentQuery = 'popular';\nconst perPage = 20;\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\nconst LOCAL_PLACEHOLDER_IMAGE = '../images/hero-image.jpg';\nlet allMovies = [];\nlet allGenres = [];\n\nconst renderMovies = async movies => {\n  const genres = await getGenres();\n\n  const movieHTML = movies\n    .map(movie => {\n      const movieGenres = movie.genre_ids\n        .map(id => genres[id] || 'Unknown')\n        .join(', ');\n      const posterPath = movie.poster_path\n        ? `${IMAGE_BASE_URL}${movie.poster_path}`\n        : LOCAL_PLACEHOLDER_IMAGE;\n\n      return `\n        <div class=\"search-section-movie\" style=\"background: linear-gradient(180deg, rgba(0, 0, 0, 0.00) 63.48%, rgba(0, 0, 0, 0.90) 92.16%), url('${posterPath}');\" data-movie-id=\"${\n        movie.id\n      }\">\n          <div class=\"search-section-movie-card-info\">\n            <h3 class=\"search-section-movie-card-title\">${\n              movie.name || movie.title\n            }</h3> \n            <div class=\"search-section-movie-card-details\">\n              <p class=\"search-section-movie-card-genre-year\">${movieGenres} | ${new Date(\n        movie.release_date\n      ).getFullYear()}</p>\n              <p class=\"search-section-movie-card-rate\">${\n                movie.vote_average\n              }</p>\n            </div>\n          </div>\n        </div>\n      `;\n    })\n    .join('');\n\n  gallery.innerHTML = movieHTML;\n\n  gallery.querySelectorAll('.search-section-movie').forEach(movieElement => {\n    movieElement.addEventListener('click', async e => {\n      const movieId = movieElement.dataset.movieId;\n      const movie = movies.find(m => m.id == movieId);\n      const movieGenres = movie.genre_ids\n        .map(id => genres[id] || 'Unknown')\n        .join(', ');\n\n      const html = `\n      <div class=\"search-movie-details-container\">\n        <button class=\"close-btn\">X</button>\n        <img src=\"${\n          movie.poster_path\n            ? IMAGE_BASE_URL + movie.poster_path\n            : LOCAL_PLACEHOLDER_IMAGE\n        }\" alt=\"${movie.title}\" width=\"248\" height=\"315\">\n        <div class=\"search-movie-details\">\n          <h3 class=\"search-movie-title\">${movie.title}</h3>\n          <div class=\"search-movie-info-container\">\n            <div class=\"search-movie-info\">\n              <p class=\"search-info-title\">Vote / Votes</p>\n              <p><span class=\"search-rating-span\">${\n                movie.vote_average\n              }</span> / <span class=\"search-rating-span\">${\n        movie.vote_count\n      }</span></p>\n            </div>\n            <div class=\"search-movie-info\">\n              <p class=\"search-info-title\">Popularity</p><span>${\n                movie.popularity\n              }</span>\n            </div>\n            <div class=\"search-movie-info\">\n              <p class=\"search-info-title\">Genre</p><span>${movieGenres}</span>\n            </div>\n          </div>\n          <div class=\"search-about-info\">\n            <p class=\"search-about-info-title\">ABOUT</p>\n            <p class=\"search-overview\">${movie.overview}</p>\n          </div>\n          <button class=\"add-to-library-btn\">${\n            isInLibrary(movie.id) ? 'Remove from library' : 'Add to my library'\n          }</button>\n        </div>\n      </div>\n    `;\n      const movieDetailsContainer = document.getElementById(\n        'search-movie-details-container'\n      );\n      movieDetailsContainer.innerHTML = html;\n      movieDetailsContainer.classList.remove('hidden');\n\n      // Add event listener for closing the movie details\n      document.querySelector('.close-btn').addEventListener('click', () => {\n        movieDetailsContainer.classList.add('hidden');\n      });\n\n      // Add event listener for the library button\n      const libraryBtn = document.querySelector('.add-to-library-btn');\n      libraryBtn.addEventListener('click', () => {\n        toggleLibrary(movie);\n        libraryBtn.textContent = isInLibrary(movie.id)\n          ? 'Remove from library'\n          : 'Add to my library';\n      });\n    });\n  });\n};\n\nconst handlePageChange = async page => {\n  currentPage = page;\n\n  try {\n    const data = await searchMovies(currentQuery, currentPage);\n    allMovies = data.results;\n    renderMovies(allMovies);\n    renderPagination(data.total_pages);\n    renderYearFilter();\n    renderGenreFilter(); // Render the genre filter\n  } catch (err) {\n    console.error(err);\n    showMessage('Something went wrong. Please try again.');\n  }\n};\n\nconst showMessage = msg => {\n  message.innerHTML = `<p>${msg}</p>`;\n  gallery.innerHTML = '';\n  pagination.innerHTML = '';\n};\n\nconst renderPagination = totalPages => {\n  pagination.innerHTML = '';\n\n  if (totalPages <= 1) return;\n\n  if (currentPage > 1) {\n    const prevButton = createPaginationButton('<');\n    prevButton.addEventListener('click', () =>\n      handlePageChange(currentPage - 1)\n    );\n    pagination.appendChild(prevButton);\n  }\n\n  const visiblePages = Math.min(3, totalPages);\n  let startPage = currentPage - Math.floor(visiblePages / 2);\n  startPage = Math.max(1, startPage);\n  let endPage = startPage + visiblePages - 1;\n  endPage = Math.min(totalPages, endPage);\n\n  for (let i = startPage; i <= endPage; i++) {\n    const pageButton = createPaginationButton(i);\n    if (i === currentPage) pageButton.classList.add('active');\n    pagination.appendChild(pageButton);\n  }\n\n  if (currentPage < totalPages) {\n    const nextButton = createPaginationButton('>');\n    nextButton.addEventListener('click', () =>\n      handlePageChange(currentPage + 1)\n    );\n    pagination.appendChild(nextButton);\n  }\n\n  function createPaginationButton(label) {\n    const pageButton = document.createElement('button');\n    pageButton.innerText = label;\n    pageButton.classList.add('pagination-button');\n    pageButton.classList.add('light-mode');\n    if (label === currentPage) {\n      pageButton.classList.add('active');\n    }\n    if (label !== '<' && label !== '>') {\n      pageButton.addEventListener('click', () =>\n        handlePageChange(parseInt(label))\n      );\n    }\n    return pageButton;\n  }\n};\n\nconst renderYearFilter = () => {\n  const yearSelect = document.createElement('select');\n  yearSelect.id = 'year-filter';\n  yearSelect.classList.add('select');\n  yearSelect.innerHTML = '<option value=\"\">Year</option>';\n\n  for (let year = 2015; year <= 2024; year++) {\n    yearSelect.innerHTML += `<option value=\"${year}\">${year}</option>`;\n  }\n\n  yearSelect.addEventListener('change', handleFilterChange);\n  yearFilterContainer.innerHTML = '';\n  yearFilterContainer.appendChild(yearSelect);\n};\n\nconst renderGenreFilter = async () => {\n  const genres = await getGenres();\n  const genreSelect = document.createElement('select');\n  genreSelect.id = 'genre-filter';\n  genreSelect.classList.add('select');\n  genreSelect.innerHTML = '<option value=\"\">Genre</option>';\n\n  Object.keys(genres).forEach(genreId => {\n    genreSelect.innerHTML += `<option value=\"${genreId}\">${genres[genreId]}</option>`;\n  });\n\n  genreSelect.addEventListener('change', handleFilterChange);\n  genreFilterContainer.innerHTML = '';\n  genreFilterContainer.appendChild(genreSelect);\n};\n\nconst handleFilterChange = () => {\n  const selectedYear = document.querySelector('#year-filter').value;\n  const selectedGenre = document.querySelector('#genre-filter').value;\n\n  let filteredMovies = allMovies;\n\n  if (selectedYear) {\n    filteredMovies = filteredMovies.filter(\n      movie => new Date(movie.release_date).getFullYear() == selectedYear\n    );\n  }\n\n  if (selectedGenre) {\n    filteredMovies = filteredMovies.filter(movie =>\n      movie.genre_ids.includes(parseInt(selectedGenre))\n    );\n  }\n\n  renderMovies(filteredMovies);\n};\n\nconst isInLibrary = movieId => {\n  const library = JSON.parse(localStorage.getItem('library')) || [];\n  return library.some(movie => movie.id == movieId);\n};\n\nconst toggleLibrary = movie => {\n  let library = JSON.parse(localStorage.getItem('library')) || [];\n\n  if (isInLibrary(movie.id)) {\n    library = library.filter(item => item.id != movie.id);\n    localStorage.setItem('library', JSON.stringify(library));\n  } else {\n    library.push(movie);\n    localStorage.setItem('library', JSON.stringify(library));\n  }\n};\n\nconst initialize = async () => {\n  try {\n    const movies = await getMoviesForToday();\n    allMovies = movies;\n    renderMovies(allMovies);\n    renderYearFilter();\n    renderGenreFilter();\n  } catch (err) {\n    console.error(err);\n    showMessage('Something went wrong. Please try again.');\n  }\n};\n\nsearchForm.addEventListener('submit', async e => {\n  e.preventDefault();\n  const searchInputValue = searchForm.searchQuery.value.trim();\n  if (!searchInputValue) {\n    showMessage('Please enter a search query');\n    return;\n  }\n  currentPage = 1;\n  currentQuery = searchInputValue;\n  await handlePageChange(currentPage);\n});\n\ninitialize();\n"],"names":["$bpxeT","parcelRequire","$f5b78c4ceda1e8db$var$gallery","document","querySelector","$f5b78c4ceda1e8db$var$searchForm","$f5b78c4ceda1e8db$var$pagination","$f5b78c4ceda1e8db$var$message","$f5b78c4ceda1e8db$var$yearFilterContainer","$f5b78c4ceda1e8db$var$genreFilterContainer","$f5b78c4ceda1e8db$var$currentDate","Date","toISOString","split","$f5b78c4ceda1e8db$var$getMoviesForToday","$parcel$interopDefault","$2TvXO","mark","_callee","movies","todayMovies","$2Vquh","getTrendingMovies","_ctx","sent","filter","movie","release_date","$f5b78c4ceda1e8db$var$currentPage","$f5b78c4ceda1e8db$var$currentQuery","$f5b78c4ceda1e8db$var$IMAGE_BASE_URL","$f5b78c4ceda1e8db$var$LOCAL_PLACEHOLDER_IMAGE","$f5b78c4ceda1e8db$var$allMovies","$f5b78c4ceda1e8db$var$renderMovies","_callee1","genres","movieHTML","getGenres","_ctx1","map","movieGenres","genre_ids","id","join","posterPath","poster_path","concat","name","title","getFullYear","vote_average","innerHTML","querySelectorAll","forEach","movieElement","addEventListener","e","movieId","html","movieDetailsContainer","libraryBtn","dataset","find","m","vote_count","popularity","overview","$f5b78c4ceda1e8db$var$isInLibrary","getElementById","classList","remove","add","$f5b78c4ceda1e8db$var$toggleLibrary","textContent","$f5b78c4ceda1e8db$var$handlePageChange","page","data","searchMovies","results","$f5b78c4ceda1e8db$var$renderPagination","total_pages","$f5b78c4ceda1e8db$var$renderYearFilter","$f5b78c4ceda1e8db$var$renderGenreFilter","console","error","t0","$f5b78c4ceda1e8db$var$showMessage","msg","totalPages","prevButton","createPaginationButton","appendChild","visiblePages","Math","min","startPage","floor","endPage","max","i","pageButton","nextButton","label","createElement","innerText","parseInt","yearSelect","year","$f5b78c4ceda1e8db$var$handleFilterChange","genreSelect","Object","keys","genreId","selectedYear","value","selectedGenre","filteredMovies","includes","JSON","parse","localStorage","getItem","some","library","item","setItem","stringify","push","$f5b78c4ceda1e8db$var$initialize","searchInputValue","preventDefault","searchQuery","trim"],"version":3,"file":"catalog.a8da0072.js.map"}