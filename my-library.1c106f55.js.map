{"mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,KAC5C,MAAMC,EAAUF,SAASG,cAAc,YACjCC,EAAiB,kCACjBC,EAA0B,kCAG1BC,EAAiB,KACrB,IAAIC,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,GAE7D,GAAuB,IAAnBJ,EAAQK,OAEV,YADAV,EAAQW,UAAY,qCAItB,MAAMC,EAAYP,EACfQ,KAAIC,GAKI,2JAJYA,EAAMC,YACrB,GAAGb,IAAiBY,EAAMC,cAC1BZ,wBAIFW,EAAME,+HAIAF,EAAMG,MAAQH,EAAMI,iJAG+BJ,EAAMK,UAAUC,KACjE,WACK,IAAIC,KAAKP,EAAMQ,cAAcC,iFAElCT,EAAMU,2FAOjBJ,KAAK,IAERpB,EAAQW,UAAYC,CAAS,EAI/BR,IAGAJ,EAAQD,iBAAiB,SAAS0B,MAAMC,IACtC,MAAMC,EAAeD,EAAEE,OAAOC,QAAQ,0BACtC,GAAIF,EAAc,CAChB,MAAMG,EAAUH,EAAaI,QAAQD,QAE/BhB,GADUR,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,IACzCuB,MAAKC,GAAKA,EAAEjB,IAAMc,IAExC,GAAIhB,EAAO,CACT,MAAMoB,EAAO,sIAIPpB,EAAMC,YACFb,EAAiBY,EAAMC,YACvBZ,WACIW,EAAMI,oIAEoBJ,EAAMI,oPAKlCJ,EAAMU,2DAEhBV,EAAMqB,wKAKIrB,EAAMsB,+JAIuCtB,EAAMK,UAAUC,KAC7D,oNAM0BN,EAAMuB,yKAMtCC,EAAwBxC,SAASyC,eACrC,2BAEFD,EAAsB3B,UAAYuB,EAClCI,EAAsBE,UAAUC,OAAO,UAGtB3C,SAASG,cAAc,cAC/BF,iBAAiB,SAAS,KACjCuC,EAAsBE,UAAUE,IAAI,SAAS,IAIlBJ,EAAsBrC,cACjD,4BAEmBF,iBAAiB,SAAS,KAC7C4C,EAAkB7B,EAAME,IACxBsB,EAAsBE,UAAUE,IAAI,UACnCtC,GAAe,G,MAOxB,MAAMuC,EAAoBb,IACxB,IAAIzB,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,GAC7DJ,EAAUA,EAAQuC,QAAO9B,GAASA,EAAME,IAAMc,IAC9CtB,aAAaqC,QAAQ,UAAWvC,KAAKwC,UAAUzC,GAAS,CACzD","sources":["src/scripts/library.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  const gallery = document.querySelector('.gallery');\n  const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n  const LOCAL_PLACEHOLDER_IMAGE = '../images/alternative-image.png'; // Ajustează acest path la imaginea ta de substituție\n\n  // Funcție pentru afișarea bibliotecii de filme\n  const displayLibrary = () => {\n    let library = JSON.parse(localStorage.getItem('library')) || [];\n\n    if (library.length === 0) {\n      gallery.innerHTML = '<p>No movies in your library.</p>';\n      return;\n    }\n\n    const movieHTML = library\n      .map(movie => {\n        const posterPath = movie.poster_path\n          ? `${IMAGE_BASE_URL}${movie.poster_path}`\n          : LOCAL_PLACEHOLDER_IMAGE;\n\n        return `\n          <div class=\"library-section-movie\" style=\"background: linear-gradient(180deg, rgba(0, 0, 0, 0.00) 63.48%, rgba(0, 0, 0, 0.90) 92.16%), url('${posterPath}');\" data-movie-id=\"${\n          movie.id\n        }\">\n            <div class=\"library-section-movie-card-info\">\n              <h3 class=\"library-section-movie-card-title\">${\n                movie.name || movie.title\n              }</h3> \n              <div class=\"library-section-movie-card-details\">\n                <p class=\"library-section-movie-card-genre-year\">${movie.genre_ids.join(\n                  ', '\n                )} | ${new Date(movie.release_date).getFullYear()}</p>\n                <p class=\"library-section-movie-card-rate\">${\n                  movie.vote_average\n                }</p>\n              </div>\n            </div>\n          </div>\n        `;\n      })\n      .join('');\n\n    gallery.innerHTML = movieHTML;\n  };\n\n  // Afiseaza initial biblioteca de filme\n  displayLibrary();\n\n  // Adaugare eveniment pentru click pe un element din galerie\n  gallery.addEventListener('click', async e => {\n    const movieElement = e.target.closest('.library-section-movie');\n    if (movieElement) {\n      const movieId = movieElement.dataset.movieId;\n      const library = JSON.parse(localStorage.getItem('library')) || [];\n      const movie = library.find(m => m.id == movieId);\n\n      if (movie) {\n        const html = `\n          <div class=\"library-movie-details-container\">\n            <button class=\"close-btn\">X</button>\n            <img src=\"${\n              movie.poster_path\n                ? IMAGE_BASE_URL + movie.poster_path\n                : LOCAL_PLACEHOLDER_IMAGE\n            }\" alt=\"${movie.title}\" width=\"248\" height=\"315\">\n            <div class=\"library-movie-details\">\n              <h3 class=\"library-movie-title\">${movie.title}</h3>\n              <div class=\"library-movie-info-container\">\n                <div class=\"library-movie-info\">\n                  <p class=\"library-info-title\">Vote / Votes</p>\n                  <p><span class=\"library-rating-span\">${\n                    movie.vote_average\n                  }</span> / <span class=\"library-rating-span\">${\n          movie.vote_count\n        }</span></p>\n                </div>\n                <div class=\"library-movie-info\">\n                  <p class=\"library-info-title\">Popularity</p><span>${\n                    movie.popularity\n                  }</span>\n                </div>\n                <div class=\"library-movie-info\">\n                  <p class=\"library-info-title\">Genre</p><span>${movie.genre_ids.join(\n                    ', '\n                  )}</span>\n                </div>\n              </div>\n              <div class=\"library-about-info\">\n                <p class=\"library-info-title\">ABOUT</p>\n                <p class=\"library-overview\">${movie.overview}</p>\n              </div>\n              <button class=\"remove-from-library-btn\">Remove from library</button>\n            </div>\n          </div>\n        `;\n        const movieDetailsContainer = document.getElementById(\n          'movie-details-container'\n        );\n        movieDetailsContainer.innerHTML = html;\n        movieDetailsContainer.classList.remove('hidden');\n\n        // Adăugare eveniment pentru închiderea detaliilor\n        const closeBtn = document.querySelector('.close-btn');\n        closeBtn.addEventListener('click', () => {\n          movieDetailsContainer.classList.add('hidden');\n        });\n\n        // Adăugare eveniment pentru butonul \"Remove from library\"\n        const removeFromLibraryBtn = movieDetailsContainer.querySelector(\n          '.remove-from-library-btn'\n        );\n        removeFromLibraryBtn.addEventListener('click', () => {\n          removeFromLibrary(movie.id);\n          movieDetailsContainer.classList.add('hidden'); // Ascunde detaliile după eliminare\n          displayLibrary(); // Reafișează galeria actualizată după eliminare\n        });\n      }\n    }\n  });\n\n  // Funcție pentru eliminarea unui film din biblioteca de filme\n  const removeFromLibrary = movieId => {\n    let library = JSON.parse(localStorage.getItem('library')) || [];\n    library = library.filter(movie => movie.id != movieId);\n    localStorage.setItem('library', JSON.stringify(library));\n  };\n});\n"],"names":["document","addEventListener","gallery","querySelector","IMAGE_BASE_URL","LOCAL_PLACEHOLDER_IMAGE","displayLibrary","library","JSON","parse","localStorage","getItem","length","innerHTML","movieHTML","map","movie","poster_path","id","name","title","genre_ids","join","Date","release_date","getFullYear","vote_average","async","e","movieElement","target","closest","movieId","dataset","find","m","html","vote_count","popularity","overview","movieDetailsContainer","getElementById","classList","remove","add","removeFromLibrary","filter","setItem","stringify"],"version":3,"file":"my-library.1c106f55.js.map"}